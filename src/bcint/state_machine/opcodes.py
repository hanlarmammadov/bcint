from enum import IntEnum


class Opcodes(IntEnum):
    POP_TOP                  =  1
    ROT_TWO                  =  2
    ROT_THREE                =  3
    DUP_TOP                  =  4
    DUP_TOP_TWO              =  5
    ROT_FOUR                 =  6
    NOP                      =  9
    UNARY_POSITIVE           =  10
    UNARY_NEGATIVE           =  11
    UNARY_NOT                =  12
    UNARY_INVERT             =  15
    BINARY_MATRIX_MULTIPLY   =  16
    INPLACE_MATRIX_MULTIPLY  =  17
    BINARY_POWER             =  19
    BINARY_MULTIPLY          =  20
    BINARY_MODULO            =  22
    BINARY_ADD               =  23
    BINARY_SUBTRACT          =  24
    BINARY_SUBSCR            =  25
    BINARY_FLOOR_DIVIDE      =  26
    BINARY_TRUE_DIVIDE       =  27
    INPLACE_FLOOR_DIVIDE     =  28
    INPLACE_TRUE_DIVIDE      =  29
    GET_LEN                  =  30
    MATCH_MAPPING            =  31
    MATCH_SEQUENCE           =  32
    MATCH_KEYS               =  33
    COPY_DICT_WITHOUT_KEYS   =  34
    PUSH_EXC_INFO            =  35
    POP_EXCEPT_AND_RERAISE   =  37
    WITH_EXCEPT_START        =  49
    GET_AITER                =  50
    GET_ANEXT                =  51
    BEFORE_ASYNC_WITH        =  52
    BEFORE_WITH              =  53
    END_ASYNC_FOR            =  54
    INPLACE_ADD              =  55
    INPLACE_SUBTRACT         =  56
    INPLACE_MULTIPLY         =  57
    INPLACE_MODULO           =  59
    STORE_SUBSCR             =  60
    DELETE_SUBSCR            =  61
    BINARY_LSHIFT            =  62
    BINARY_RSHIFT            =  63
    BINARY_AND               =  64
    BINARY_XOR               =  65
    BINARY_OR                =  66
    INPLACE_POWER            =  67
    GET_ITER                 =  68
    GET_YIELD_FROM_ITER      =  69
    PRINT_EXPR               =  70
    LOAD_BUILD_CLASS         =  71
    YIELD_FROM               =  72
    GET_AWAITABLE            =  73
    LOAD_ASSERTION_ERROR     =  74
    INPLACE_LSHIFT           =  75
    INPLACE_RSHIFT           =  76
    INPLACE_AND              =  77
    INPLACE_XOR              =  78
    INPLACE_OR               =  79
    LIST_TO_TUPLE            =  82
    RETURN_VALUE             =  83
    IMPORT_STAR              =  84
    SETUP_ANNOTATIONS        =  85
    YIELD_VALUE              =  86
    POP_EXCEPT               =  89
    HAVE_ARGUMENT            =  90
    STORE_NAME               =  90
    DELETE_NAME              =  91
    UNPACK_SEQUENCE          =  92
    FOR_ITER                 =  93
    UNPACK_EX                =  94
    STORE_ATTR               =  95
    DELETE_ATTR              =  96
    STORE_GLOBAL             =  97
    DELETE_GLOBAL            =  98
    ROT_N                    =  99
    LOAD_CONST               =  100
    LOAD_NAME                =  101
    BUILD_TUPLE              =  102
    BUILD_LIST               =  103
    BUILD_SET                =  104
    BUILD_MAP                =  105
    LOAD_ATTR                =  106
    COMPARE_OP               =  107
    IMPORT_NAME              =  108
    IMPORT_FROM              =  109
    JUMP_FORWARD             =  110
    JUMP_IF_FALSE_OR_POP     =  111
    JUMP_IF_TRUE_OR_POP      =  112
    JUMP_ABSOLUTE            =  113
    POP_JUMP_IF_FALSE        =  114
    POP_JUMP_IF_TRUE         =  115
    LOAD_GLOBAL              =  116
    IS_OP                    =  117
    CONTAINS_OP              =  118
    RERAISE                  =  119
    JUMP_IF_NOT_EXC_MATCH    =  121
    LOAD_FAST                =  124
    STORE_FAST               =  125
    DELETE_FAST              =  126
    GEN_START                =  129
    RAISE_VARARGS            =  130
    CALL_FUNCTION            =  131
    MAKE_FUNCTION            =  132
    BUILD_SLICE              =  133
    MAKE_CELL                =  135
    LOAD_CLOSURE             =  136
    LOAD_DEREF               =  137
    STORE_DEREF              =  138
    DELETE_DEREF             =  139
    CALL_FUNCTION_KW         =  141
    CALL_FUNCTION_EX         =  142
    EXTENDED_ARG             =  144
    LIST_APPEND              =  145
    SET_ADD                  =  146
    MAP_ADD                  =  147
    LOAD_CLASSDEREF          =  148
    MATCH_CLASS              =  152
    FORMAT_VALUE             =  155
    BUILD_CONST_KEY_MAP      =  156
    BUILD_STRING             =  157
    LOAD_METHOD              =  160
    CALL_METHOD              =  161
    LIST_EXTEND              =  162
    SET_UPDATE               =  163
    DICT_MERGE               =  164
    DICT_UPDATE              =  165
    CALL_METHOD_KW           =  166
    BINARY_ADD_ADAPTIVE      =  7
    BINARY_ADD_INT           =  8
    BINARY_ADD_FLOAT         =  13
    BINARY_ADD_UNICODE       =  14
    BINARY_ADD_UNICODE_INPLACE_FAST = 18
    BINARY_SUBSCR_ADAPTIVE   =  21
    BINARY_SUBSCR_LIST_INT   =  36
    BINARY_SUBSCR_TUPLE_INT  =  38
    BINARY_SUBSCR_DICT       =  39
    JUMP_ABSOLUTE_QUICK      =  40
    LOAD_ATTR_ADAPTIVE       =  41
    LOAD_ATTR_SPLIT_KEYS     =  42
    LOAD_ATTR_WITH_HINT      =  43
    LOAD_ATTR_SLOT           =  44
    LOAD_ATTR_MODULE         =  45
    LOAD_GLOBAL_ADAPTIVE     =  46
    LOAD_GLOBAL_MODULE       =  47
    LOAD_GLOBAL_BUILTIN      =  48
    LOAD_METHOD_ADAPTIVE     =  58
    LOAD_METHOD_CACHED       =  80
    LOAD_METHOD_CLASS        =  81
    LOAD_METHOD_MODULE       =  87
    STORE_ATTR_ADAPTIVE      =  88
    STORE_ATTR_SPLIT_KEYS    =  120
    STORE_ATTR_SLOT          =  122
    STORE_ATTR_WITH_HINT     =  123
    LOAD_FAST__LOAD_FAST     =  127
    STORE_FAST__LOAD_FAST    =  128
    LOAD_FAST__LOAD_CONST    =  134
    LOAD_CONST__LOAD_FAST    =  140
    STORE_FAST__STORE_FAST   =  143

    def __eq__(self, another):
        return self.value == another.value

    def __hash__(self):
        return self.value
